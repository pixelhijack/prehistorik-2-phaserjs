{"version":3,"sources":["webpack:///webpack/bootstrap 1b2772054f74c154dd4c","webpack:///./client/src/index.js","webpack:///./client/src/components/gamestate/gamestate.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,uC;AACA;AACA,EAAC,E;;;;;;;;;;AClBD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4B","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1b2772054f74c154dd4c\n **/","var GameState = require('./components/gamestate/gamestate.js');\n\nvar configs = {\n    WIDTH: 1000,\n    HEIGHT: 1000,\n    DOM_ELEMENT: 'app'\n};\n\nGameState.prototype.update = function(){\n    console.log('[PHASER] UPDATE lifecycle method overriden');\n};\n\nvar game = new Phaser.Game(configs.WIDTH, configs.HEIGHT, Phaser.AUTO, configs.DOM_ELEMENT);\n\ngame.state.add('Game', GameState);\n\ngame.state.start('Game', true, true, { \n    initialConfig: 'some initial state'\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","function GameState(){\n    \n}\n\nGameState.prototype.init = function(configs){\n    console.log('[PHASER] INIT - to be overrided', configs);\n};\n\nGameState.prototype.preload = function(){\n    console.log('[PHASER] PRELOAD - to be overrided');\n};\n\nGameState.prototype.create = function(){\n    console.log('[PHASER] CREATE - to be overrided');\n};\n\nGameState.prototype.update = function(){\n    console.log('[PHASER] UPDATE - to be overrided');\n};\n\nmodule.exports = GameState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/src/components/gamestate/gamestate.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}